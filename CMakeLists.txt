cmake_minimum_required(VERSION 2.8.8)
set(PROJECT_NAME_STR EAP-Tests)
project(${PROJECT_NAME_STR} C CXX)

find_package(Threads REQUIRED)

if(CMAKE_COMPILER_IS_GNUCXX)
    add_definitions(-Wall -ansi -Wno-deprecated -std=gnu++11 -pedantic)
endif()

# set common include folder for module
set(COMMON_INCLUDES
  ${PROJECT_SOURCE_DIR}/lib/
)

MESSAGE(STATUS "COMMON_INCLUDES: " ${COMMON_INCLUDES})

set(EXT_PROJECTS_DIR ${PROJECT_SOURCE_DIR}/ext)

# GTest
include(${EXT_PROJECTS_DIR}/gtest/GoogleTest.cmake)

include_directories(
  ${GTEST_INCLUDE_DIRS}
  ${COMMON_INCLUDES}
  )

# Build shared library and link it to test project
add_subdirectory(lib)

set(TEST_LINK_LIBRARIES
  EAPlib
  ${GTEST_LIB_PATH}
  ${GTEST_MAIN_PATH}
  ${CMAKE_THREAD_LIB_INIT}
  pthread
  )

# create a test binary per test source file
enable_testing()

set(TEST_DIR ${PROJECT_SOURCE_DIR}/test)
set(TEST_SRC_FILES
  ${TEST_DIR}/test_crc.cpp
  )

foreach(_test_file ${TEST_SRC_FILES})
    get_filename_component(_test_name ${_test_file} NAME_WE)
    add_executable(${_test_name} ${_test_file})
    add_dependencies(${_test_name} gtest_external)
    target_link_libraries(${_test_name} ${TEST_LINK_LIBRARIES})
    add_test(${_test_name} ${_test_name})
endforeach()
